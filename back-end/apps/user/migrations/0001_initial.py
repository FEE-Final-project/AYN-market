# Generated by Django 3.1.4 on 2023-03-12 17:38

import apps.config.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('email', apps.config.fields.TrimEmailField(blank=True, max_length=255, null=True, unique=True)),
                ('first_name', apps.config.fields.TrimCharField(blank=True, max_length=255, null=True)),
                ('last_name', apps.config.fields.TrimCharField(blank=True, max_length=255, null=True)),
                ('gender', models.SmallIntegerField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], null=True)),
                ('phone', apps.config.fields.TrimCharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.SmallIntegerField(blank=True, choices=[('admin', 'Admin'), ('customer', 'customer')], default='customer', null=True)),
                ('is_phone_confirmed', models.BooleanField(default=False)),
                ('is_email_confirmed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
